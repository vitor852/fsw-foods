// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id String @id @default(uuid())

  name     String
  imageUrl String

  deliveryFee         Decimal @db.Decimal(10, 2)
  deliveryTimeMinutes Int

  categories Category[]
  products   Product[]
  orders Order[]
}

model Category {
  id String @id @default(uuid())

  name     String
  imageUrl String

  restaurants Restaurant[]
  products    Product[]
}

model Product {
  id String @id @default(uuid())

  name        String
  description String
  imageUrl    String

  price              Decimal @db.Decimal(10, 2)
  discountPercentage Int     @default(0)

  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  orderProducts OrderProduct[]
}

model OrderProduct {
  id        String  @id @default(uuid())

  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])
  
  quantity  Int
}

model Order {
  id                  String         @id @default(uuid())

  products            OrderProduct[]

  restaurantId        String
  restaurant          Restaurant     @relation(fields: [restaurantId], references: [id])

  status              OrderStatus

  deliveryTimeMinutes Int

  deliveryFee         Decimal        @db.Decimal(10, 2)
  subtotalPrice       Decimal        @db.Decimal(10, 2)
  totalPrice          Decimal        @db.Decimal(10, 2)
  totalDiscounts      Decimal        @db.Decimal(10, 2)

  createdAt           DateTime       @default(now())
}

enum OrderStatus {
  CONFIRMED
  CANCELED
  PREPARING
  DELIVERING
  COMPLETED
}
